{"version":3,"sources":["index.js"],"names":["Grid","props","_this","Object","C_Users_R0Ger_Desktop_github_The_game_the_game_of_life_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_R0Ger_Desktop_github_The_game_the_game_of_life_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_R0Ger_Desktop_github_The_game_the_game_of_life_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","changeGridCell","bind","C_Users_R0Ger_Desktop_github_The_game_the_game_of_life_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","i","j","change","tableTemplate","_this2","prop","ArrayGrid","map","row","rowsTemplate","cols","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","key","onClick","className","cellSpacing","React","Component","Body","_this3","seedGeneration","temp","state","sizeGrid","split","arr","Math","floor","random","setState","stop","clearInterval","timerID","plays","letsGo","setInterval","play","speed","size","JSON","parse","stringify","count","tempCountGeneration","countGeneration","fast","speeds","slow","handleChange","changeCell","createGrid","clearGrid","e","target","value","id","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20e1f2f6.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './css/index.css'\r\nclass Grid extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.changeGridCell = this.changeGridCell.bind(this)\r\n  }\r\n  changeGridCell (i, j) {\r\n    // console.log(i, j);\r\n    this.props.change(i, j)\r\n  }\r\n  render () {\r\n    let tableTemplate\r\n    tableTemplate = this.props.prop.ArrayGrid.map((row, i) => {\r\n      let rowsTemplate\r\n      rowsTemplate = row.map((cols, j) => {\r\n        return <td\r\n          key={j}\r\n          onClick={() => this.changeGridCell(i, j)}\r\n          className={this.props.prop.ArrayGrid[i][j] ? 'green' : null}\r\n        />\r\n      })\r\n      return <tr key={i}>{rowsTemplate}</tr>\r\n    })\r\n    return (\r\n      <table cellSpacing = \"0\">\r\n        <tbody cellSpacing = \"0\">\r\n          {tableTemplate}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\nclass Body extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      sizeGrid: '10x20',\r\n      ArrayGrid: [],\r\n      plays: false,\r\n      speed: 500,\r\n      countGeneration: 0\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.changeCell = this.changeCell.bind(this)\r\n    this.createGrid = this.createGrid.bind(this)\r\n    this.clearGrid = this.clearGrid.bind(this)\r\n  }\r\n  handleChange (e) {\r\n    this.setState({\r\n      sizeGrid: e.target.value,\r\n      countGeneration: 0\r\n    })\r\n    this.createGrid(e.target.value)\r\n    this.stop()\r\n  }\r\n  changeCell (i, j) {\r\n    // console.log(i, j);\r\n    let temp = this.state.ArrayGrid\r\n    temp[i][j] = !temp[i][j]\r\n    this.setState({\r\n      ArrayGrid: temp\r\n    })\r\n  }\r\n  createGrid (size) {\r\n    let temp = size.split('x')\r\n    let arr = []\r\n    for (let i = 0; i < temp[0]; i++) {\r\n      arr[i] = []\r\n      for (let j = 0; j < temp[1]; j++) {\r\n        arr[i][j] = false\r\n      }\r\n    }\r\n    this.setState({\r\n      ArrayGrid: arr\r\n    })\r\n  }\r\n  componentWillMount () {\r\n    this.createGrid(this.state.sizeGrid)\r\n  }\r\n  clearGrid () {\r\n    this.createGrid(this.state.sizeGrid)\r\n    this.setState({\r\n      countGeneration: 0\r\n    })\r\n  }\r\n  seedGeneration = () => {\r\n    let temp = this.state.sizeGrid.split('x')\r\n    let arr = []\r\n    for (let i = 0; i < temp[0]; i++) {\r\n      arr[i] = []\r\n      for (let j = 0; j < temp[1]; j++) {\r\n        if (Math.floor(Math.random() * 4) === 1) {\r\n          arr[i][j] = true\r\n        } else {\r\n          arr[i][j] = false\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      ArrayGrid: arr\r\n    })\r\n  }\r\n  stop = () => {\r\n    clearInterval(this.timerID)\r\n    this.setState({\r\n      plays: false\r\n    })\r\n  }\r\n  letsGo = () => {\r\n    if (this.state.plays === false) {\r\n      this.setState({\r\n        plays: true\r\n      })\r\n      this.timerID = setInterval(\r\n        () => this.play(),\r\n        this.state.speed\r\n      )\r\n    }\r\n  }\r\n\r\n  play = () => {\r\n    let size = this.state.sizeGrid.split('x')\r\n    let temp = JSON.parse(JSON.stringify(this.state.ArrayGrid))\r\n    const arr = JSON.parse(JSON.stringify(this.state.ArrayGrid))\r\n    for (let i = size[0] - 1; i >= 0; i--) {\r\n      for (let j = size[1] - 1; j >= 0; j--) {\r\n        let count = 0\r\n        if (i > 0) if (arr[i - 1][j]) count++\r\n        if (i > 0 && j > 0) if (arr[i - 1][j - 1]) count++\r\n        if (i > 0 && j < size[1] - 1) if (arr[i - 1][j + 1]) count++\r\n        if (j < size[1] - 1) if (arr[i][j + 1]) count++\r\n        if (j > 0) if (arr[i][j - 1]) count++\r\n        if (i < size[0] - 1) if (arr[i + 1][j]) count++\r\n        if (i < size[0] - 1 && j > 0) if (arr[i + 1][j - 1]) count++\r\n        if (i < size[0] - 1 && size[1] - 1) if (arr[i + 1][j + 1]) count++\r\n        if (arr[i][j] && (count < 2 || count > 3)) temp[i][j] = false\r\n        if (!arr[i][j] && count === 3) temp[i][j] = true\r\n      }\r\n    }\r\n    let tempCountGeneration = this.state.countGeneration + 1\r\n    this.setState({\r\n      ArrayGrid: temp,\r\n      countGeneration: tempCountGeneration\r\n    })\r\n  }\r\n  fast = () => {\r\n    let speeds = this.state.speed\r\n    speeds -= 200\r\n    this.setState({\r\n      speed: speeds\r\n    })\r\n    clearInterval(this.timerID)\r\n    this.timerID = setInterval(\r\n      () => this.play(),\r\n      speeds\r\n    )\r\n  }\r\n  slow = () => {\r\n    let speeds = this.state.speed\r\n    speeds += 200\r\n    this.setState({\r\n      speed: speeds\r\n    })\r\n    clearInterval(this.timerID)\r\n    this.timerID = setInterval(\r\n      () => this.play(),\r\n      speeds\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div >\r\n        <div className=\"header\"><span>The Game of Life</span></div>\r\n        <div className=\"button-menus\">\r\n          <div className=\"button\" onClick={this.letsGo}>Play</div>\r\n          <div className=\"button\" onClick={this.stop}>Pause</div>\r\n          <div className=\"button\" onClick={this.clearGrid}>Clear</div>\r\n          <div className=\"button\" onClick={this.slow}>Slow</div>\r\n          <div className=\"button\" onClick={this.fast}>Fast</div>\r\n          <div className=\"button\" onClick={this.seedGeneration}>Seed</div>\r\n          <select className=\"button \" id=\"changeGrid\" size=\"1\" onChange={this.handleChange}>\r\n            <option value=\"10x20\">20x10</option>\r\n            <option value=\"30x50\">50x30</option>\r\n            <option value=\"50x70\">70x50</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"grid-main\">\r\n          <div id=\"feeld\">\r\n            <Grid prop={this.state} change={this.changeCell}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"header\">Generation : {this.state.countGeneration}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nReactDOM.render(\r\n  <Body />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}